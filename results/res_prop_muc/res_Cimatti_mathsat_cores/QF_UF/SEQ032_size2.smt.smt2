(set-option :produce-unsat-cores true)
(set-info :status unknown)
(declare-sort U 0)
(declare-fun c_1 () U)
(declare-fun c2 () U)
(declare-fun c_0 () U)
(declare-fun c3 () U)
(declare-fun f4 (U) U)
(declare-fun f1 (U U) U)
(define-fun .def_0 () Bool (! (not (= c_0 c_1)) :named _c0))
(define-fun .def_1 () Bool (! (= (f1 (f1 (f1 c3 c_0) c_0) c_0) (f1 c_0 (f1 c_0 c_0))) :named _c1))
(define-fun .def_2 () Bool (! (= (f1 (f1 (f1 c3 c_0) c_0) c_1) (f1 c_0 (f1 c_0 c_1))) :named _c2))
(define-fun .def_3 () Bool (! (= (f1 (f1 (f1 c3 c_0) c_1) c_0) (f1 c_1 (f1 c_0 c_0))) :named _c3))
(define-fun .def_4 () Bool (! (= (f1 (f1 (f1 c3 c_0) c_1) c_1) (f1 c_1 (f1 c_0 c_1))) :named _c4))
(define-fun .def_5 () Bool (! (= (f1 (f1 (f1 c3 c_1) c_0) c_0) (f1 c_0 (f1 c_1 c_0))) :named _c5))
(define-fun .def_6 () Bool (! (= (f1 (f1 (f1 c3 c_1) c_0) c_1) (f1 c_0 (f1 c_1 c_1))) :named _c6))
(define-fun .def_7 () Bool (! (= (f1 (f1 (f1 c3 c_1) c_1) c_0) (f1 c_1 (f1 c_1 c_0))) :named _c7))
(define-fun .def_8 () Bool (! (= (f1 (f1 (f1 c3 c_1) c_1) c_1) (f1 c_1 (f1 c_1 c_1))) :named _c8))
(define-fun .def_9 () Bool (! (= (f1 (f1 c2 c_0) c_0) (f1 c_0 (f1 c_0 c_0))) :named _c9))
(define-fun .def_10 () Bool (! (= (f1 (f1 c2 c_0) c_1) (f1 c_0 (f1 c_1 c_1))) :named _c10))
(define-fun .def_11 () Bool (! (= (f1 (f1 c2 c_1) c_0) (f1 c_1 (f1 c_0 c_0))) :named _c11))
(define-fun .def_12 () Bool (! (= (f1 (f1 c2 c_1) c_1) (f1 c_1 (f1 c_1 c_1))) :named _c12))
(define-fun .def_13 () Bool (! (let ((a!1 (= (f1 c_0 (f4 c_0)) (f1 (f4 c_0) (f1 c_0 (f4 c_0))))))
  (not a!1)) :named _c13))
(define-fun .def_14 () Bool (! (let ((a!1 (= (f1 c_1 (f4 c_1)) (f1 (f4 c_1) (f1 c_1 (f4 c_1))))))
  (not a!1)) :named _c14))
(define-fun .def_15 () Bool (! (or (= (f1 c_0 c_0) c_0) (= (f1 c_0 c_0) c_1)) :named _c15))
(define-fun .def_16 () Bool (! (or (= (f1 c_0 c_1) c_0) (= (f1 c_0 c_1) c_1)) :named _c16))
(define-fun .def_17 () Bool (! (or (= (f1 c_1 c_0) c_0) (= (f1 c_1 c_0) c_1)) :named _c17))
(define-fun .def_18 () Bool (! (or (= (f1 c_1 c_1) c_0) (= (f1 c_1 c_1) c_1)) :named _c18))
(define-fun .def_19 () Bool (! (or (= (f4 c_0) c_0) (= (f4 c_0) c_1)) :named _c19))
(define-fun .def_20 () Bool (! (or (= (f4 c_1) c_0) (= (f4 c_1) c_1)) :named _c20))
(define-fun .def_21 () Bool (! (or (= c3 c_0) (= c3 c_1)) :named _c21))
(define-fun .def_22 () Bool (! (or (= c2 c_0) (= c2 c_1)) :named _c22))
(assert _c0)
(assert _c1)
(assert _c2)
(assert _c3)
(assert _c4)
(assert _c5)
(assert _c6)
(assert _c7)
(assert _c8)
(assert _c9)
(assert _c10)
(assert _c11)
(assert _c12)
(assert _c13)
(assert _c14)
(assert _c15)
(assert _c16)
(assert _c17)
(assert _c18)
(assert _c19)
(assert _c20)
(assert _c21)
(assert _c22)
(check-sat)
(get-unsat-core)
